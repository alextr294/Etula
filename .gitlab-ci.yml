# This file is a template, and might need editing before it works on your project.
# Official framework image. Look for the different tagged releases at:
# https://hub.docker.com/r/library/php
image: php:7.2-fpm

# Pick zero or more services to be used on all builds.
# Only needed when using a docker container to run your tests in.
# Check out: http://docs.gitlab.com/ce/ci/docker/using_docker_images.html#what-is-a-service
services:
  - mysql:latest

variables:
  MYSQL_DATABASE: scanetu
  MYSQL_ROOT_PASSWORD: secret

cache:
  key: ${CI_COMMIT_REF_SLUG}
  paths:
    - vendor/
    - node_modules/


before_script:
  
  # Update packages
  - apt-get update -yqq
  
  # Install dependencies
  - apt-get install apt-utils -yqq
  - apt-get install git nodejs libmemcached-dev libcurl4-gnutls-dev libicu-dev libmcrypt-dev libvpx-dev libjpeg-dev libpng-dev libxpm-dev zlib1g-dev libfreetype6-dev libxml2-dev libexpat1-dev libbz2-dev libgmp3-dev libldap2-dev unixodbc-dev libpq-dev libaspell-dev libsnmp-dev libpcre3-dev libtidy-dev -yqq
  
  # Install php extensions
  # intl gd xml zip bz2 opcache pdo_mysql curl json 
  - docker-php-ext-install mbstring
  - docker-php-ext-install pdo_mysql
  - docker-php-ext-install zip
  
  # Install & enable Xdebug for code coverage reports
  - pecl install xdebug && docker-php-ext-enable xdebug
  
  # Install Composer and project dependencies.
  - curl -sS https://getcomposer.org/installer | php
  - php composer.phar install
 
  - cp .env.testing .env
  
  # Generate an application key. Re-cache.
  - php artisan key:generate
  - php artisan config:cache
  # Run database migrations.
  - php artisan migrate
  # Run database seed
  - php artisan db:seed

test:
  script:
    # run laravel tests
    - php vendor/bin/phpunit --colors=never
   
